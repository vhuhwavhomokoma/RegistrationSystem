@page
@model RegistrationSystem.Pages.StudentViewModel
@{
}
<link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
<style>
    html, body {
        height: 60%;
    }

    body {
        font-family: 'Roboto', sans-serif;
        background-image: linear-gradient(to top, #FFFFFF 0%, #0000FF 100%);
    }
    .status-indicator {
        display: inline-block;
        width: 10px;
        height: 10px;
        border-radius: 50%;
        margin-right: 5px;
        transition: opacity 0.5s ease-in-out; 
    }

    .collapsible {
        background-color: #266af2;
        color: white;
        cursor: pointer;
        padding: 18px;
        width: 100%;
        border: none;
        text-align: left;
        outline: none;
        font-size: 15px;
    }

    .online {
        background-color: #28a745; 
    }

    .offline {
        background-color: #dc3545; 
    }
</style>


<body>
    <!--<img src="https://annedece.sirv.com/Images/user-vector.jpg" class="rounded-circle p-2 bg-white">-->

    <div class="container mt-5">
        <div>
            <span>@Model.studentUser.StudentName:</span>
            <span id="status" class="status-indicator"></span>
            <span id="statusText"></span>
        </div>
    </div>
    <main>
        <p></p>
        <p>@Model.studentUser.UserName</p>
        <p>@Model.studentUser.Course</p>
        <div>
            <h2>Enrolled Modules</h2>
            @foreach (var module in Model.courseRegistered)
            {
                <div class="collapsible">
                    <p>@module</p>
                </div>
                
            }
            
            
        </div>
        <br />
        <button onclick="window.location.href='/RegisterView?User=@Model.studentId'">Register</button>
      
    </main>

    



</body>


 <script>
      
        const isUserOnline = true;

        
        function updateUserStatus() {
            const Indicator = document.getElementById('status');
            const status = document.getElementById('statusText');

            if (isUserOnline) {
                Indicator.classList.add('online');
                Indicator.classList.remove('offline');
                status.textContent = 'Online';
                blink(); 
            } else {
                Indicator.classList.add('offline');
                Indicator.classList.remove('online');
                status.textContent = 'Offline';
                stop(); 
            }
        }

       
        function blink() {
            const Indicator = document.getElementById('status');
            setInterval(() => {
                Indicator.style.opacity = (Indicator.style.opacity === '0' ? '1' : '0');
            }, 500); 
        }

        
        function stop() {
            const Indicator = document.getElementById('status');
            Indicator.style.opacity = '1'; e
            clearInterval(); 
        }

       
        updateUserStatus();
    </script>